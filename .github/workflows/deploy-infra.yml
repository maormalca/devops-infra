name: Terraform infra CI/C

on:
  pull_request: # Runs checks and plan on pull requests
  push:         # Runs apply only on main branch pushes

  workflow_dispatch:
    inputs:
      run_apply:
        description: "Run Terraform destroy (Be careful...)"
        required: true
        type: boolean

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }} # AWS credentials for Terraform and provider access
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  static-checks:
    name: Static Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform init upgrade
        run: terraform init -upgrade # Initializes Terraform with latest module/provider versions

      - name: Terraform Validate
        run: terraform validate # Validates syntax and structure of Terraform files

      - name: Check for Backend Configuration
        run: |
          if grep -q 'backend "s3"' *.tf; then
            echo " Backend S3 configuration found."
          else
            echo " Missing backend configuration!" && exit 1
          fi

      - name: Run TFLint
        uses: terraform-linters/setup-tflint@v1
      - run: tflint --init && tflint # Runs static analysis on Terraform code

  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init # Initializes Terraform working directory

      - name: Terraform Plan
        run: terraform plan # Generates execution plan (dry run)

  terraform-apply:
    name: Terraform Apply
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' # Only runs on direct push to main
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve # Applies infrastructure changes without manual approval

  terraform-destroy:
    name: Terraform Destroy
    if: ${{ github.event.inputs.run_apply == 'true' }} # Manual trigger with confirmation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Destroy 
        run: terraform destroy -auto-approve # Destroys all managed infrastructure
